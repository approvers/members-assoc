openapi: "3.1.0"

info:
    title: "members-assoc"
    description: "Manages and associates our identity with SNS accounts."
    version: "0.1.0"

servers:
    - url: "http://127.0.0.1:3000"
      description: "Local debug environment"
    - url: "https://member.approvers.dev"
      description: "Deployed production environment"

tags:
    - name: "member"
      description: "Manipulations about members."
    - name: "associations"
      description: "Manipulations about links associated to a member."

paths:
    /members:
        get:
            summary: "Get all members list."
            tags: ["member"]
            deprecated: false
            responses:
                200:
                    description: "Success"
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Member"
    /members/{discordId}:
        get:
            summary: "Get a member by its ID on Discord."
            tags: ["member"]
            deprecated: false
            parameters:
                - name: discordId
                  in: path
                  required: true
                  schema: { type: string }
                  example: "279614913129742338"
            responses:
                200:
                    description: "Success"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Member"
                404:
                    description: "Not Found"
    /members/{discordId}/associations:
        put:
            summary: "Replaces associated links with the given list."
            tags: ["associations"]
            deprecated: false
            parameters:
                - in: header
                  name: "Authorization"
                  description: "Discord OAuth token, which has scope of `identify` and `guilds.members.read`."
                  deprecated: false
                  required: true
                  schema: { type: string }
                  example: "Bearer <oauth-token>"
            requestBody:
                description: "List of association link."
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: "#/components/schemas/AssociatedLink"
        delete:
            summary: "Deletes all associated links."
            tags: ["associations"]
            deprecated: false

components:
    schemas:
        Member:
            type: object
            properties:
                discordId: { type: string }
                username: { type: string }
                associatedLinks:
                    type: array
                    items:
                        $ref: "#/components/schemas/AssociatedLink"
        AssociatedLink:
            type: object
            properties:
                type: { type: string }
                id: { type: string }
                name: { type: string }
